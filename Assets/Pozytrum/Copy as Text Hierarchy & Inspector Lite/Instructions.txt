=========================================
 Hierarchy & Inspector Exporter
=========================================
Copyright (c) 2025 Pozytrum Michał Szczepanik
All rights reserved.

Thank you for downloading Hierarchy & Inspector Exporter!

-------------------------
 1. DESCRIPTION
-------------------------

Hierarchy & Inspector Exporter is a Unity editor tool that allows you to easily copy component properties from a selected GameObject or the hierarchy structure of objects to the system clipboard as formatted text.

This is useful for:
*   Debugging and comparing component settings.
*   Quickly creating documentation for object configurations.
*   Sharing information about the structure of a scene or prefab.
*   Analyzing detailed component data (using Reflection mode).

-------------------------
 2. INSTALLATION / SETUP
-------------------------

1.  Import the package into your Unity project via the Asset Store or by importing the `.unitypackage` file.
2.  The tool's files will be placed in the folder:
    `Assets/Pozytrum/Copy as Text Hierarchy & Inspector/`
3.  The main script is located in the `Editor` subfolder and will be automatically detected by Unity. No additional setup is required.

IMPORTANT: This tool works exclusively within the Unity editor and is not intended for use in game builds.

-------------------------
 3. HOW TO USE
-------------------------

The tool is accessible in three ways:

A) MAIN TOOL WINDOW:
   *   Open the window by selecting from the top Unity menu:
       `Tools -> Pozytrum -> Hierarchy & Inspector Exporter`
   *   The window allows you to:
       *   Select the mode: Copy Properties or Copy Hierarchy.
       *   Configure detailed options for each mode (e.g., Reflection vs. Serialized mode, include inactive objects, max depth, foldout markers, etc.).
       *   Perform the copy action for the selected object (Properties) or selected objects / the entire scene (Hierarchy).
   *   Settings chosen in this window are saved (in EditorPrefs) and are also used by the context menus for consistency.

B) CONTEXT MENU IN HIERARCHY WINDOW:
   *   Right-click on one or more GameObjects in the Hierarchy window.
   *   Choose an option from the submenu:
       `Copy Object Names As Text / ...`
   *   Available options (using settings saved from the main window):
       *   `Hierarchy Below (Full Tree - Use Settings)`: Copies the full structure below the clicked object.
       *   `Selected Objects Hierarchy (Full Tree Below Each - Use Settings)`: Copies the full structure below *each* selected object.
       *   `Selected Objects Only (Preserve Structure - Use Settings)`: Copies only the names of the selected objects, preserving indentation to represent their relative structure.

C) CONTEXT MENU IN INSPECTOR WINDOW:
   *   Right-click on the header of any component in the Inspector window.
   *   Choose an option from the submenu:
       `Copy Component Data As Text / ...`
   *   Available options (using settings saved from the main window):
       *   `Copy This (Using Window Settings)`: Copies the properties of only that specific component.
       *   `Copy All on GameObject (Using Window Settings)`: Copies the properties of *all* components on the given GameObject.

-------------------------
 4. MAIN FEATURES (Summary)
-------------------------

*   **Copying Component Properties:**
    *   Two modes: `Detailed Reflection` (thorough, uses C# reflection) and `Visible Serialized` (closer to the Inspector view).
    *   Options: Include Non-Public members (Reflection), Group by Type (Reflection), Show Transform component.
    *   Copy a single component or all components on a GameObject.

*   **Copying Hierarchy Structure:**
    *   Modes: Full hierarchy below selection, Structure of selected items only, Entire scene/prefab hierarchy.
    *   Options: Include inactive objects (marked with `(inactive)`), Maximum recursion depth, Custom indentation string, Use foldout markers (`▼`/`▶`).
    *   Automatic detection and handling of Prefab Stage editing mode.

-------------------------
 5. SUPPORT
-------------------------

If you encounter problems or have suggestions, please contact us via:
pozytrum@gmail.com

-------------------------
 7. LICENSE
-------------------------

Use of this asset is governed by the terms of the Unity Asset Store End User License Agreement (EULA).
Details can also be found in the `LICENSE.txt` file in the asset's root folder.

---
Thank you again, and enjoy using the tool!